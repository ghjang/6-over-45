name: Deploy 6-over-45 to GitHub Pages

on:
  workflow_dispatch:

  # 'Update Guesses' workflow가 완료되었을 때 이 workflow 실행
  workflow_run:
    workflows: ["Update Guesses"]
    types:
      - completed
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    # 'Update Guesses' workflow가 성공했을 때만 실행
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Checkout s-comp-box repository
        uses: actions/checkout@v4
        with:
          repository: ghjang/s-comp-box
          path: s-comp-box

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies and Build
        run: |
          cd s-comp-box/webapp/6-over-45
          npm ci
          npm run build

      - name: Copy JSON files to build folder
        run: |
          mkdir -p s-comp-box/webapp/6-over-45/build/data
          cp data/*.json s-comp-box/webapp/6-over-45/build/data/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "s-comp-box/webapp/6-over-45/build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get next draw number
        id: get_next_draw
        run: |
          LAST_DRAW=$(cat data/frequency.json | jq '.recent_draws | keys[] | sub("draw_"; "") | tonumber | max')
          NEXT_DRAW=$((LAST_DRAW + 1))
          echo "next_draw=$NEXT_DRAW" >> $GITHUB_OUTPUT

      - name: Delete existing release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="release-${{ steps.get_next_draw.outputs.next_draw }}"
          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" \
            | jq -r '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
            git push --delete origin $TAG_NAME || true
          fi

      - name: Read next guesses
        id: read_guesses
        run: |
          NEXT_GUESSES=$(cat data/next_guess.json | jq -r '.next_guesses | map(. | join(", ")) | join("\n")')
          echo "next_guesses<<EOF" >> $GITHUB_OUTPUT
          echo "$NEXT_GUESSES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.get_next_draw.outputs.next_draw }}
          name: 제 ${{ steps.get_next_draw.outputs.next_draw }} 회 로또 추측 번호
          body: |
            ## 제 ${{ steps.get_next_draw.outputs.next_draw }} 회 로또 추측 번호

            **이번 회차 추측 번호:**
            ${{ steps.read_guesses.outputs.next_guesses }}

            **배포된 URL:** ${{ steps.deployment.outputs.page_url }}

            ---
            자세한 내용은 [여기](${{ steps.deployment.outputs.page_url }})에서 확인하세요.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
